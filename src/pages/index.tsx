import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import Head from "next/head";
import Link from "next/link";

import { api, RouterOutputs } from "~/utils/api";

const CreatePostWizard = () => {
  const {user} = useUser();

  console.log(user);

  if (!user) return null;

  return (
    <div className="flex gap-3 w-full">
      <img 
        src={user.imageUrl} 
        alt="Profile Image" 
        className="w-14 h-14 rounded-full" 
      />
      <input 
        placeholder="Type some emojis" 
        className="bg-transparent grow outline-none"
      />
    </div>
  )
}

type PostWithUser = RouterOutputs["post"]["getAll"][number]

const PostView = (props: PostWithUser) => {
  const {post, author} = props;
  return (
    <div key={post.id} className="p-4 gap-3 border-b border-slate-400 flex">
      <img src={author.profilePicture} alt="" className="w-14 h-14 rounded-full" />
      <div className="flex flex-col">
        <div className="flex text-slate-400">
          <span>{`@${author.name}`}</span>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  );
}

export default function Home() {
  const hello = api.post.hello.useQuery({ text: "from tRPC" });

  const user = useUser();

  const {data, isLoading} = api.post.getAll.useQuery();

  if (isLoading) return <div>Loading...</div>

  if (!data) return <div>No data</div>

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center h-screen">
        <div className="w-full md:max-w-2xl border-x border-slate-400">
          <div className="border-b border-slate-400 p-4 flex">
            {!user.isSignedIn && (
              <div className="flex justify-center">
                <SignInButton />
              </div>
            )}
            {user.isSignedIn && <CreatePostWizard />}
          </div>
          <div className="flex flex-col">
            {data?.map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
}
